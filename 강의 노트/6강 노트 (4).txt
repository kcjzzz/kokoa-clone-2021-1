◆ 6.31 Chat Screen part Four

border-radius 한쪽 모서리의 모양을 바꿀수 있다.
border-top-left-radius: 0px; 이런식으로
한쪽 모서리에 radius값을 따로 줄수가 있다. (카카오톡 클론코딩 말풍선 만들때 사용함)

◆ 6.32 Chat Screen part Five

modifier방식
하나의 클래스를 추가해서 두개의 클래스를 줘서 
기존의 클래스와 중복되지않게 값을 변경할수있다.

order 순서를 바꿔주는 기능
부모 선택자가 flex일때 그 자식 flex children에 order를 부여해서 순서를 바꿀수있다.
order: 1; 이런식으로 뒤에 숫자를 씀, 매우 유용하게 변경가능

다른 순서변경 방법
flex-direction: row-reverse를 이용해서 html을 사용하지않고 순서를 바꿀수있다.
이 방법이 코드가 더 깔끔하게 나오고 flex children이 많으면 order쓰는 방식에서
복잡하게 되기때문에 이 방법이 더 유용하다.


◆ 6.33 Write Message Input

absolute의 위치값은 세부적으로 입력해야된다. 예를들어, top:13px 이렇게


◆ 6.34 Splash Screen part One

가장 위로 올리는 방법
position: absolute    fixed는 고정할때 사용

너비(width)의 단위는 vw 100vw는 너비의 100%를 의미
높이(height)의 단위는 vh 100vh는 높이의 100%를 의미
여기에 top:0까지 주면 전체화면을 덮게 됨 (다만 absolute 상태일 때)


◆ 6.35 Splash Screen part Two

애니메이션이 돌아가지 않고 유지하는 방법
animation에 forwards를 넣어주는 것
fowards는 마지막 keyframe을 기억하게 하는 기능이므로 
애니메이션이 끝나고 그 상태를 유지하게 됨

ex)
 animation: hideSplashScreen 1s ease-in-out forwards;

visibility: hidden;
마우스에 걸리지 않게 빠지는것 (클릭 할수있게)
그러나 html자체가 사라지지않음 웹페이지에서 F12를 누르면 그대로 있음
따라서 뭐가 숨기거나 html을 제거할떄는 뇌를 담당하는 javascript이 필요하다. 
css과정에는 그냥 visibility를 쓰는정도로만 하기로

animation을 지연시키는 방법
animation-delay: 숫자s ;


◆ 6.37 More Animations

will-change Property
브라우저에게 뭐가가 바뀔거라고 얘기해줄때 씀,
애니메이션이 훨씬 나아 보이는 효과를 줌

효과를 줄 클래스에
will-change: transform; 애니메이션 동작이 좀더 자연스러워지는 효과를 주는 듯
브라우저를 돕는, 브라우저가 컴퓨터 그래픽카드를 이용해 애니메이션을 가속화시킴
그래서 동작이 더 자연스럽게 된다.
(항상 쓰는건 아니고, 뭔가 애니메이션이 부자연스럽거나 흔들거리거나 하면 써볼만 함)


◆ 6.38 Animating Chats Screen

숙제: 1.chat에 프로필 사진이나 말풍선을 애니메이션으로 만들기
       2.chat에 말풍선 2개가 왼쪽 오른쪽에서 fadeIn 되는 애니메이션 만들기

fadeIn 애니메이션 만들기 (실제로도 자주 사용됨)
없어졌다 나오는거

from에 opacity를 0으로 줬다가 to에 1로 주면 나옴

어떤 요소를 transform 하기위해서는 그 부모 엘리먼트에
transition을 걸어줘야 된다.

javascript 없이 html과 css만으로 애니메이션을 줄수있다.
	

◆ 6.40 No Mobile Media Query
pc에서가 아닌 모바일에서만 접속 가능한 것처럼 만들기
(대신 pc웹사이트창 사이즈를 줄이면 볼 수 있음)


먼저 해당문구를 id: no-mobile 이런식으로 줘서 모든 html 페이지에 붙여넣기한다.
꼭 모든 페이지에 하나하나 복사해줘야 됨, 

그 후 css를 새로만들고 (꼭 style에 import해주기)
처음 카카오톡 실행했을떄 스크린전체에 카카오톡 마크가 뜨는 화면처럼 #no-mobile에 
position을 absolute로 맨 위에 주고 z-index의 숫자를 높게줘서 레이어 가장 위에 뜨게 만드고
height와 width를 스크린이 꽉차기 100vh, 100vw로 주고 display는 flex;
가리는게 가장위에 가게 top:0; 정렬을 위해 justify-content와 align-items를 center로 준다.

그리고 미디어 쿼리를 써서

@media screen and (max-width: 645px) {
  #no-mobile {
    display: none;
  }

최대 너비가 645px, 즉 645px 보다 작다면 이 크기를 줄여달라는 스크린이 
display:none 보이지않게한다. 그러면 645px 위에는 이 스크린이 뜨겠지?

화면 크기뿐만 아니라 다른 미디어 쿼리
no-landscape(가로모드 불가) 등을 만들수도있다.
landscape나 portrait를 이용


