◆ 5.0 What is Git

Git과 Github에 대해 잘 알아야 프로처럼 코딩할 수 있음
팀 단위로 프로젝트를 만들거나 직업으로 프로그래밍을 하고싶다면 github를 써야한다.

Git은 파일 크기가 클 경우, 내가 코드를 언제 변경했는지 등 파일의 히스토리를 알때 유용하게 쓸 수 있음
프로그래밍을 위한 code text뿐 아니라 image나 audio등등 다른 모든파일의 변경내역도 확인할 수있다.
(매우 중요!) git은 파일을 계속 추적하면서 변경내역을 관리해주는 역할

Github는 내가 만든 code나 변경내역(git)을 서버에 업로드하는 것
그래서 컴퓨터에 있던 파일이 날라가거나 컴퓨터가 고장났을때 github에 업로드했던 것을
다시 다운받아서 사용할 수 있다

Git은 git-scm.com에 들어서가서 다운 받으면 됨 무료임
다른 프로그램은 현장에서 거이 안쓴다. 무조건 git을 사용하자 


◆ 5.1 What is Github

Repositories: 내 코드가 살고 있는 곳 (코드 변경내역과 히스토리를 가지고있는 폴더)
commit: 내가 코딩작업을 하거나 변경을 한후 저장한 시점을 말함

Github 사이트를 통해 내가 Git 작업에서 했던 히스토리, 변경내역을 볼 수있음

매우 유용하다 변경내역을 볼 수있다는건 내가 새로 만든 코딩에 실수가 있으면
예전 업데이트 전으로 돌아갈수도 있다는 것

Git 과 Github는 매우 중요(★★★)


◆ 5.2 Creating a Github Repository

Repository를 만드는 방법 2가지
1.컴퓨터에 폴더를 만든 후 그 폴더를 github에 올리는 방식
2.처음부터 github에 Repository을 먼저 만드는 방식

니꼬는 2번을 추천

Public은 공개 Private는 비공개
내가 나중에 프로그래머가 된후에 남에게 알려지면 안되는 정보들이 있을경우 private하면 되고
당장은 public으로 하는게 더 좋다 이걸로 포트폴리오를 만들 수 있으니까 public으로 설정하자
public으로 설정하면 내가 코딩 실수한것을 니꼬나 다른사람이 보고 알려줄수있으니 배우는 단계에서는
public으로 설정하자

Github Desktop은 초보자가 사용하기 매우 좋은 프로그램
어떻게 작동 되는지 쉽게 알수있음


◆ 5.3 Making Our First Commits

github desktop에서 만든 폴더를 visual studio code에 가져와야 함
그래야 작업한 내용이 git와 연동이 됨. 그래서 폴더경로를 간단히 해주는게 좋다

작업하기에 앞서 README.md 파일 만들기
.md(markdown)은 서식이 있는 문서를 작성한다는 뜻

README 파일은 모든 git repository가 가지고 있어야 하는 파일
markdown 파일은 #으로 시작함 더 많은 markdown 태그는 google에서 검색하기

github desktop에서 작업한 내용 commit하기
작업한 내용 체크박스 하고 밑에 commit제목 쓴후에 commit to master 클릭하면 됨
그 후에 상단에 있는 publish branch 를 눌러야 github에 올라감

수정사항이 있을때 VSC에서 수정을 하고 다시 github desktop에 commit을 해줘야 git에서 
인식이 됨 다시 commit할때는 제목을 또 써줄 필요없음
그런데 여기서 끝이 아니라 상단에 push origin을 눌러줘야 github서버에도 올라가게 됨

VSC 작업 후 save > github desktop에서 파일 체크해주고 commit > push origin
(이 작업은 매우중요하니 꼭 알아두기)